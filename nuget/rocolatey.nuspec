<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>rocolatey</id>
    <title>ROCO(latey)</title>
    <version>0.7.1</version>
    <authors>Manfred Wallner</authors>
    <owners>Manfred Wallner</owners>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <summary>blazing fast Chocolatey queries</summary>
    <description>
## R(ocket-fast) Chocolatey queries.

* mimics output of Chocolatey commands (drop-in replacement)
* doesn't make use of Chocolatey or chocolatey.dll - just looks at the filesystem / does native ODATA calls.
* can be used to query Chocolatey status while choco.exe is running.
* it's supposed to be much faster for each command that has a Chocolatey counterpart.

### What can roco do for me?

Take a look at the help (roco -h), basically roco allows you to list installed packages, list failed package installs, configured sources and check for updates. In addition to that, there may be some hidden gems that are only available in roco, but not in vanilla Chocolatey.

|    choco command    |  roco command   |
| :-----------------: | :-------------: |
| `choco source list` |  `roco source`  |
|  `choco list -lo`   |   `roco list`   |
|  `choco outdated`   | `roco outdated` |
|          -          |   `roco bad`    |
|          -          |   ... :wink:    |

Normally you should not run multiple Chocolatey instances at the same time, however this may be required in certain scenarios. If you wanted to check if updates are available, or simply list all configured sources, roco is there to help you out without worrying of breaking something because you accidentally called choco in parallel.

### How much faster is roco.exe compared to choco.exe?

It very much depends on the number of installed packages and configured feeds, generally speaking roco should always be much faster than choco, the difference becomes bigger when dealing with many packages and feeds.

    </description>
    <copyright>Copyright (c) 2020-2023 Manfred Wallner</copyright>
    <projectUrl>https://github.com/mwallner/rocolatey</projectUrl>
    <licenseUrl>https://raw.githubusercontent.com/mwallner/rocolatey/master/LICENSE.txt</licenseUrl>
    <iconUrl>https://cdn.jsdelivr.net/gh/mwallner/rocolatey/roco.png</iconUrl>
    <language>en-US</language>
    <tags>chocolatey local tool roco</tags>
    <dependencies>
      <dependency id="vcredist140"/>
    </dependencies>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
