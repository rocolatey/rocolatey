name: Rust-Build-Pipeline

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main, dev ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test-debug:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
    - name: generate license info (${{ matrix.os }})
      run: cargo bundle-licenses --format json --output THIRDPARTY.json
    - name: Build on ${{ matrix.os }}
      run: cargo build --verbose
    - name: Run tests on ${{ matrix.os }}
      run: cargo test --verbose
      
  build-test-nightly:
    name: Build on nightly rust
    needs: [build-test-debug]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
    - name: generate license info (${{ matrix.os }})
      run: cargo bundle-licenses --format json --output THIRDPARTY.json
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1.0.3
      with: 
        command: test
        
  build-release:
    name: release-binaries
    needs: [build-test-debug]
    runs-on: windows-latest
    strategy: 
      matrix:
        target: [ i686-pc-windows-msvc, x86_64-pc-windows-msvc ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: generate license info (${{ matrix.os }})
        run: cargo bundle-licenses --format json --output THIRDPARTY.json
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Upload Release Build Artifacts
        uses: actions/upload-artifact@v4
        with: 
          name: ${{ matrix.target }}-stable-artifacts
          path: ${{ github.workspace }}\target\${{ matrix.target }}\release\*.exe
